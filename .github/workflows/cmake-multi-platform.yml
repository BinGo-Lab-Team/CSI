name: QML CMake Linux Build

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'CMake 构建类型'
        required: true
        default: 'Release'
        type: choice
        options: [Release, Debug, RelWithDebInfo]

# 防抖：同一分支并发触发时取消旧任务，省分钟数
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 最小权限
permissions:
  contents: read

env:
  CMAKE_GENERATOR: Ninja
  CMAKE_BUILD_PARALLEL_LEVEL: 4

jobs:
  linux:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      # 用 install-qt-action 安装 Qt 6.8.1（修改为存在的版本）
      - name: Install Qt 6.8.1
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.1'  # 改为存在的版本
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          aqtversion: '==3.3.*'
          # QML 常用模块（按需增减）
          modules: 'qtdeclarative qttools qtshadertools'
          cache: true

      - name: Show Qt paths (debug)
        run: |
          echo "Qt6_DIR=$Qt6_DIR"
          ls -la "$Qt6_DIR" || true

      - name: Configure (CMake)
        run: |
          cmake -S . -B build -G "${{ env.CMAKE_GENERATOR }}" \
            -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }} \
            -DCMAKE_PREFIX_PATH="${Qt6_DIR}"

      - name: Build
        run: cmake --build build -j

      # 如需跑测试且启用了 CTest，可打开
      # - name: Test
      #   run: |
      #     cd build
      #     ctest --output-on-failure

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ github.event.inputs.build_type }}
          path: build/**
          if-no-files-found: error
          retention-days: 3
